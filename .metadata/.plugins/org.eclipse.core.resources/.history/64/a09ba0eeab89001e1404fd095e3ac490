package test.dept.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import test.util.DbcpBean;

public class DeptDao {
	//자신의 참조값을 담을 static 필드
	private static DeptDao dao;
	//외부에서 객체 생성하지 못하도록 생성자의 접근 지정자를 private 로
	private DeptDao() {}
	//자신의 참조값을 리턴해주는 static public(공개) 메소드
	public static DeptDao getInstance() {
		//만일 최초의 호출이라면
		if(dao==null) {
			dao=new DeptDao();
		}
		return dao;
	}
	
	//부서 목록을 보여주는 메소드 (select *)
	public List<DeptDao> getList(){
		List<DeptDao> list = new ArrayList<>();
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		try {
			conn = new DbcpBean().getConn();
			//실행할 sql 문
			String sql = "SELECT * FROM dept";
			pstmt = conn.prepareStatement(sql);
			//? 에 바인딩할 내용이 있으면 여기서 한다.
			
			//query 문 수행하고 결과(ResultSet) 얻어내기
			rs = pstmt.executeQuery();
			//반복문 돌면서 
			while (rs.next()) {
				DeptDto dto = new DeptDto();
				
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (rs != null)
					rs.close();
				if (pstmt != null)
					pstmt.close();
				if (conn != null)
					conn.close(); //Connection 객체의 close() 메소드를 호출하면 Pool 에 반납된다.
			} catch (Exception e) {
			}
		}
		return list;
	}
}
