package test.guest.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.List;

import test.guest.dto.GuestDto;
import test.util.DbcpBean;

public class GuestDao {
	// 자신의 참조값을 저장할 static 필드
	private static GuestDao dao;
	
	// static 초기화 블럭 (이 클래스가 최초로 사용될 때 오직 한번만 수행된다.)
	static {
		dao=new GuestDao();
	}
	
	// 외부에서 객체 생성하지 못하도록
	private GuestDao() {
		
	}
	// 자신의 참조값을 리턴해줄 static 메소드
	public static GuestDao getInstance() {
		return dao;
	}
	
	/*
	 * 	글 번호는 board_quest_seq.NEXTVAL 해서 부여하세요
	 * 	글의 등록날짜는 SYSDATE 로 등록하세요.
	 * 	글 수정시 날짜는 수정하지 마세요.
	 */
	public boolean insert (GuestDto dto) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		int rowCount = 0;
		try {
			conn = new DbcpBean().getConn();
			//실행할 sql 문
			String sql = "INSERT INTO board_guest"
					+ " (num, write, content, pwd, regdate)"
					+ " VALUES (board_guest.NEXTVAL,?,?,?,SYSDATE)";
			pstmt = conn.prepareStatement(sql);
			//? 에 바인딩 할 내용이 있으면 바인딩
			pstmt.setString(1, dto.getWriter());
			pstmt.setString(2, dto.getContent());
			pstmt.setString(3, dto.getPwd());
			rowCount = pstmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
				if (conn != null)
					conn.close();
			} catch (Exception e) {
			}
		}
		if (rowCount > 0) {
			return true;
		} else {
			return false;
		}
		
	}
	public boolean update (GuestDto dto) {
		return false;
	}
	public boolean delete (int num) {
		return false;
	}
	public GuestDto getData(int num) {
		return null;
	}
	public List<GuestDto> getList(){
		return null;
	}
}
